---
# ansible-playbook -u root -i 123.123.123.123, ansible.yaml
- hosts: all
  remote_user: root
  vars:
    # brew install esolitos/ipa/sshpass
    ansible_connection: ssh
    domain_name: our-school.space

  vars_prompt:
    - name: ansible_ssh_pass
      prompt: "Enter the SHH password"
      private: true

    - name: sudo_password
      prompt: "Enter new user password"
      private: true

  tasks:
    - name: Add new user
      user:
        name: polytech
        password: "{{ sudo_password | password_hash('sha512') }}"
        shell: /bin/bash
        state: present
        groups: sudo
        append: yes

    - name: Set authorized key taken from file
      ansible.posix.authorized_key:
        user: polytech
        state: present
        key: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"

    - name: Restrict root login and password authentication
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: "^{{ item.regexp }}"
        line: "{{ item.line }}"
        state: present
      with_items:
        - { regexp: "PermitRootLogin", line: "PermitRootLogin no" }
        - { regexp: "PasswordAuthentication", line: "PasswordAuthentication no" }
      notify: Restart sshd

    - name: Ensure nginx is installed
      apt:
        name: nginx
        state: latest

    - name: Install Certbot
      apt:
        name: python3-certbot-nginx
        state: present

    - name: Install GIT
      apt:
        name: git
        state: present

    - name: Copy GitHub repo to /var/www
      git:
        repo: https://github.com/web-polytech/2023.git
        dest: /var/www/our-school
        update: yes

    - name: Set up Nginx configuration
      file:
        src: /var/www/our-school/nginx.conf
        dest: /etc/nginx/conf.d/our-school.conf
        state: link
      notify: Restart nginx

    - name: Generate SSL certificate for our-school.space
      shell: certbot --nginx --agree-tos --redirect --non-interactive --email wtf403@yandex.ru --domains our-school.space


  handlers:
    - name: Restart sshd
      service:
        name: sshd
        state: restarted

    - name: Restart nginx
      service:
        name: nginx
        state: restarted
